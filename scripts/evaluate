#!/bin/sh
projects=($1) # array of projects to test
numbugs=$2  # pass in the number of bugs to test
commitminpath="$(git rev-parse --show-toplevel)"
defects4jpath="$(which defects4j)"
defects4jpath=${defects4jpath::-13}  # cut off the bin/defects4j
loopCount=1
for project in ${projects[@]}; do
  projectpath=${defects4jpath}projects/$project/
  bugs=($(head -$numbugs "$projectpath"commit-db))  # array of the top numbugs bugs
  for bug in ${bugs[@]}; do
    # split up the bug line into it's componenets
    bugsplit=($(echo "$bug" | tr ',' '\n'))
    bugnum=${bugsplit[0]}
    buggyid=${bugsplit[1]}
    fixedid=${bugsplit[2]}

    # get the path to the source files for this project
    srctestpath=($(grep "$fixedid" "$projectpath"dir_map.csv | tr ',' '\n'))
    srcpath=${srctestpath[1]}

    # checkout the repo for the bugnum
    repo=/tmp/$project-$bugnum
    rm -rf $repo
    defects4j checkout -p $project -v "$bugnum"f -w $repo
    cd $repo

    # call refactor
    git diff $buggyid $fixedid --name-only -- $srcpath > /tmp/files.txt
    prefix=`pwd`
    awk -v prefix="$prefix" '{print prefix $0}' /tmp/files.txt
    #echo "running refactor"
    #python ${commitminpath}/refactor/refactor.py /tmp/files.txt
    #echo "done refactor"

    # create all the diffs
    echo "$repo" > /tmp/fullDiff.txt
    echo "$repo" > /tmp/diffWithContext.txt

    # get the diff and split into one file per hunk
    git diff $buggyid $fixedid -- $srcpath >> /tmp/fullDiff.txt
    mkdir -p /tmp/cmpatches
    rm -rf /tmp/cmpatches/*
    ${commitminpath}/scripts/splitpatch.rb -H /tmp/fullDiff.txt
    mv *.patch /tmp/cmpatches

    git diff $buggyid $fixedid -- $srcpath >> /tmp/diffWithContext.txt
    git diff $buggyid $fixedid --name-only -- $srcpath > /tmp/files.txt

    # run our tool. Normally you pass in a testname, but we don't need it here
    startrundelta=`date +%s`
    python ${commitminpath}/delta/rundelta.py testname defects4j.test $buggyid
    endrundelta=`date +%s`
    python ${commitminpath}/scripts/diffMaker.py
    mv -f /tmp/diffOther.txt ${commitminpath}/experiments/
    mv -f /tmp/diffNewOurs.txt ${commitminpath}/experiments/
    mv ${commitminpath}/experiments/diffNewOurs.txt ${commitminpath}/experiments/diffOurs${project}${buggyid}.txt
    mv ${commitminpath}/experiments/diffOther.txt ${commitminpath}/experiments/diffOther${project}${buggyid}.txt
    echo diffOurs${project}${buggyid}.txt >> ${commitminpath}/experiments/diffFiles.txt
    echo diffOther${project}${buggyid}.txt >> ${commitminpath}/experiments/diffFiles.txt
    echo $loopCount >> ${commitminpath}/experiments/diffFiles.txt
    echo $((endrundelta-startrundelta)) >> ${commitminpath}/experiments/diffFiles.txt
    loopCount=$((loopCount + 1))

    # clean up
    rm /tmp/fullDiff.txt /tmp/diffWithContext.txt /tmp/files.txt /tmp/diffOurs.txt
    #rm -rf $repo
  done
  loopCount=1
  cd  ${commitminpath}/experiments/
  python ${commitminpath}/experiments/dataProcessor.py $project
  rm ${commitminpath}/experiments/diffFiles.txt
done



